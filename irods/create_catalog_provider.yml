---
- name: Allow catalog service providers to talk to DBMS
  hosts: dbms
  become: true
  tasks:
    - name: Enable notifications when not testing
      ansible.builtin.set_fact:
        notifications_enabled: true
      tags:
        - no_testing

    - name: Allow communication with Postgres DBMS
      ansible.builtin.blockinfile:
        path: "{{ _irods_dbms_pg_hba }}"
        marker: "# {mark} DS IRODS MANAGED BLOCK"
        block: |
          {% for i in groups['irods_catalog'] %}
          {%   set addr = i if i | ansible.utils.ipaddr else lookup('dig', i) %}
          {{ '%-7s %-15s %-15s %-23s %s'
            | format('host', 'ICAT', hostvars[i]._irods_db_user, addr ~ '/32', 'md5') }}
          {% endfor %}
      notify:
        - Reload postgresql
      tags:
        - postgres

  handlers:
    - name: Reload postgresql
      when: notifications_enabled | default(false)
      ansible.builtin.service:
        name: postgresql
        state: reloaded


- name: Provision catalog service provider
  ansible.builtin.import_playbook: provision.yml


- name: Provision additional for catalog service providers
  hosts: irods_catalog
  become: true
  vars:
    odbc_description: >-
      {{ lookup('ini', 'Description file=files/postgresql-odbc-tmpl.ini section=PostgreSQL') }}
    odbc_driver: >-
      {{ lookup('ini', 'Driver file=files/postgresql-odbc-tmpl.ini section=PostgreSQL') }}
    odbc_setup: >-
      {{ lookup('ini', 'Setup file=files/postgresql-odbc-tmpl.ini section=PostgreSQL') }}
  tasks:
    - name: Configure linux kernel
      ansible.posix.sysctl:
        name: kernel.{{ item.name }}
        value: "{{ item.value }}"
      with_items: "{{ _sysctl_kernel }}"
      tags:
        - no_testing

    - name: Verify PostgreSQL client version is 9.3 or 12
      when: _irods_dbms_pg_version != '9.3' and _irods_dbms_pg_version != '12'
      ansible.builtin.fail:
        msg: Only PostgreSQL client versions 9.3 and 12 are supported

    - name: Ensure PostgreSQL 9.3 clients are installed
      when: _irods_dbms_pg_version == '9.3'
      ansible.builtin.yum:
        name:
          - https://download.postgresql.org/pub/repos/yum/9.3/redhat/rhel-7-x86_64/postgresql93-libs-9.3.25-1PGDG.rhel7.x86_64.rpm
          - https://download.postgresql.org/pub/repos/yum/9.3/redhat/rhel-7-x86_64/postgresql93-9.3.25-1PGDG.rhel7.x86_64.rpm
          - https://download.postgresql.org/pub/repos/yum/9.3/redhat/rhel-7-x86_64/postgresql93-odbc-10.03.0000-1PGDG.rhel7.x86_64.rpm

    - name: Handle PostgreSQL 12
      when: _irods_dbms_pg_version == '12'
      block:
        - name: Ensure PostgreSQL 12 repo is installed
          ansible.builtin.yum:
            name: >-
              https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm

        - name: Ensure PostgreSQL 12 clients are installed
          ansible.builtin.package:
            name:
              - postgresql12
              - postgresql12-odbc
            state: present

        - name: Add postgres 12 clients to path
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: /etc/profile.d
            mode: a+r
          with_fileglob:
            - "files/profile.d/*"

        - name: Define PostgreSQL 12 ODBC Driver
          ansible.builtin.shell:
            executable: /bin/bash
            cmd: |
              if driverDef="$(odbcinst -q -d -n PostgreSQL)"; then
                description="$(sed --quiet 's/^Description=//p' <<< "$driverDef")"
                driver="$(sed --quiet 's/^Driver=//p' <<< "$driverDef")"
                setup="$(sed --quiet 's/^Setup=//p' <<< "$driverDef")"
                if [[ "$description" == 'PostgreSQL 12 ODBC Driver' \
                  && "$driver" == '/usr/pgsql-12/lib/psqlodbc.so' \
                  && "$setup" == '/usr/pgsql-12/lib/psqlodbcw.so' ]]
                then
                  exit 0
                fi
              fi
              if ! odbcinst -i -d -r -v; then
                exit 1
              fi
              echo changed
          args:
            stdin: "{{ lookup('file', 'files/postgresql-odbc-tmpl.ini') }}"
          register: result
          changed_when: result.stdout == 'changed'

    - name: Ensure required packages are installed
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items:
        - mailx
        - parallel

    - name: Ensure pika installed
      ansible.builtin.pip:
        name: pika<1.2
        state: present

    - name: Lock irods-database-plugin-postgres to required version
      community.general.yum_versionlock:
        name:
          - irods-database-plugin-postgres-{{ _irods_version }}
        state: present
# XXX - Due to https://github.com/ansible-collections/community.general/issues/4470, this isn't
# idempotent.
      tags: non_idempotent
# XXX - ^^^

    - name: Install irods server packages
      ansible.builtin.package:
        name:
          - irods-database-plugin-postgres
        state: present

    - name: Install plugins
      ansible.builtin.import_tasks: tasks/install_plugins.yml

    - name: Ensure iRODS ownership
      ansible.builtin.import_tasks: tasks/ensure_irods_ownership.yml


- name: Configure catalog service providers
  ansible.builtin.import_playbook: cfg_irods.yml


- name: Start iRODS on catalog service providers
  hosts: irods_catalog
  become: "{{ _become_svc_acnt }}"
  become_user: "{{ _irods_service_account_name }}"
  become_flags: "-i"
  gather_facts: false
  tasks:
    - name: Start iRODS
      irods_ctl:

    - name: Authenticate clerver
      irods_clerver_auth:
        provider: "{{ inventory_hostname }}"
        password: "{{ _irods_clerver_password }}"


- name: Perform run-time configuration
  ansible.builtin.import_playbook: irods_runtime_init.yml
