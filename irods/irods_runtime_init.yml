---
- name: Run-time initialization
  hosts: irods_catalog
  become: "{{ _become_svc_acnt }}"
  become_user: "{{ _irods_service_account_name }}"
  run_once: true
  tasks:
    - name: Ensure service user type exists
      irods_user_type:
        type: ds-service
        description: a Data Store service

    - name: Ensure public group's home is correct
      become: false
      delegate_to: localhost
      irods_move:
        source: /{{ _irods_zone_name }}/home/public
        destination: /{{ _irods_zone_name }}/home/shared
        host: "{{ groups['irods_catalog'][0] }}"
        port: "{{ _irods_zone_port }}"
        admin_user: "{{ _irods_clerver_user }}"
        admin_password: "{{ _irods_clerver_password }}"
        zone: "{{ _irods_zone_name }}"

    - name: Ensure public group's trash is correct
      become: false
      delegate_to: localhost
      irods_move:
        source: /{{ _irods_zone_name }}/trash/home/public
        destination: /{{ _irods_zone_name }}/trash/home/shared
        host: "{{ groups['irods_catalog'][0] }}"
        port: "{{ _irods_zone_port }}"
        admin_user: "{{ _irods_clerver_user }}"
        admin_password: "{{ _irods_clerver_password }}"
        zone: "{{ _irods_zone_name }}"

    - name: Ensure CyVerse curated collection base collection exists
      become: false
      delegate_to: localhost
      irods_collection:
        path: /{{ _irods_zone_name }}/home/shared/commons_repo/curated
        parents: true
        state: present
        host: "{{ groups['irods_catalog'][0] }}"
        port: "{{ _irods_zone_port }}"
        admin_user: "{{ _irods_clerver_user }}"
        admin_password: "{{ _irods_clerver_password }}"
        zone: "{{ _irods_zone_name }}"

    - name: Initialize rodsadmin perms
      when: init_rodsadmin_perms | d(false)
      delegate_to: localhost
      become: false
      block:
        - name: Give rodsadmin group write permission on top-level static collections
          irods_permission:
            zone: "{{ _irods_zone_name }}"
            subject: rodsadmin
            permission: write
            object: "{{ item }}"
            host: "{{ groups['irods_catalog'][0] }}"
            port: "{{ _irods_zone_port }}"
            admin_user: "{{ _irods_clerver_user }}"
            admin_password: "{{ _irods_clerver_password }}"
          with_items:
            - /
            - /{{ _irods_zone_name }}
            - /{{ _irods_zone_name }}/home
            - /{{ _irods_zone_name }}/trash
            - /{{ _irods_zone_name }}/trash/home

        - name: Give rodsadmin group own permission on home collections
          irods_permission:
            zone: "{{ _irods_zone_name }}"
            subject: rodsadmin
            permission: own
            object: "{{ item }}"
            recursion: exclusive
            host: "{{ groups['irods_catalog'][0] }}"
            port: "{{ _irods_zone_port }}"
            admin_user: "{{ _irods_clerver_user }}"
            admin_password: "{{ _irods_clerver_password }}"
          with_items:
            - /{{ _irods_zone_name }}/home
            - /{{ _irods_zone_name }}/trash/home

    - name: Ensure anonymous user exists
      delegate_to: localhost
      become: false
      irods_user:
        name: anonymous
        password: ''
        state: present
        host: "{{ groups['irods_catalog'][0] }}"
        port: "{{ _irods_zone_port }}"
        admin_user: "{{ _irods_clerver_user }}"
        admin_password: "{{ _irods_clerver_password }}"
        zone: "{{ _irods_zone_name }}"

    - name: Ensure anonymous user has read access to required collections
      delegate_to: localhost
      become: false
      no_log: true
      irods_permission:
        subject: anonymous
        permission: read
        object: "{{ item }}"
        host: "{{ groups['irods_catalog'][0] }}"
        port: "{{ _irods_zone_port }}"
        admin_user: "{{ _irods_clerver_user }}"
        admin_password: "{{ _irods_clerver_password }}"
        zone: "{{ _irods_zone_name }}"
      with_items:
        - /{{ _irods_zone_name }}
        - /{{ _irods_zone_name }}/home
        - /{{ _irods_zone_name }}/home/shared
        - /{{ _irods_zone_name }}/home/shared/commons_repo/curated

    - name: Start periodic policies
      environment:
        IRODS_AUTHENTICATION_FILE: /var/lib/irods/.irods/.a-adm
        IRODS_USER_NAME: "{{ _irods_admin_username }}"
      block:
        - name: Initialize iRODS admin session
          ansible.builtin.shell:
            executable: /bin/bash
            cmd: iinit
            stdin: "{{ _irods_admin_password }}"
          changed_when: false

        - name: Start quota usage computation
          ansible.builtin.shell:
            executable: /bin/bash
            cmd: |
              irule \
                --rule-engine-plugin-instance=irods_rule_engine_plugin-irods_rule_language-instance \
                cyverse_housekeeping_rescheduleQuotaUsageUpdate null ruleExecOut
          register: results
          changed_when: results.stdout == 'scheduled quota usage updates'

        - name: Start storage free space determination
          ansible.builtin.shell:
            executable: /bin/bash
            cmd: |
              irule \
                --rule-engine-plugin-instance=irods_rule_engine_plugin-irods_rule_language-instance \
                cyverse_housekeeping_rescheduleStorageFreeSpaceDetermination null ruleExecOut
          register: results
          changed_when: results.stdout == 'scheduled storage determination'

        - name: Start trash removal
          ansible.builtin.shell:
            executable: /bin/bash
            cmd: |
              irule \
                --rule-engine-plugin-instance=irods_rule_engine_plugin-irods_rule_language-instance \
                cyverse_housekeeping_rescheduleTrashRemoval null ruleExecOut
          register: results
          changed_when: results.stdout == 'scheduled trash removal'

      always:
        - name: Exit iRODS admin session
          ansible.builtin.shell:
            executable: /bin/bash
            cmd: iexit full
          changed_when: false
