---
- name: Set up for testing irods_avu
  hosts: localhost
  tasks:
    - name: Prepare for testing
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          touch /tmp/object
          iinit <<< password
          iadmin mkuser tester rodsuser
          iadmin moduser tester password password
          iput -f -R ingestRes /tmp/object add-object
          iput -f -R ingestRes /tmp/object set-object
          imeta add -d set-object set-a1 set-v1 set-u
          imeta add -d set-object set-a1 set-v2
          imeta add -d set-object set-a2 set-v2
          imeta add -R ingestRes rm-a1 rm-v1
          imeta add -R ingestRes rm-a1 rm-v1 rm-u
          imeta add -R ingestRes rm-a1 rm-v2
          imeta add -R ingestRes rm-a2 rm-v1
      changed_when: true
      tags:
        - non_idempotent


- name: Test irods_avu
  hosts: dstesting-provider_configured-1.dstesting_default
  become: true
  become_user: irods
  tasks:
    - name: Add <a1,v1> to data object
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: password
        state: add

    - name: Explicit add explicit unitless <a1,v1> to data object
      irods_avu:
        attribute: a1
        value: v1
        units: null
        entity_type: data object
        entity_name: /testing/home/rods/add-object
        host: localhost.localdomain
        port: 1247
        zone: testing
        username: rods
        password: password
        state: add
      register: results
      failed_when: results['changed'] or results['failed']

    - name: Add <a1,v1,u> to data object
      irods_avu:
        attribute: a1
        value: v1
        units: u
        entity_name: /testing/home/rods/add-object
        host: localhost
        zone: testing
        password: password
        state: add

    - name: Add <a1,v2> to data object
      irods_avu:
        attribute: a1
        value: v2
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: password
        state: add

    - name: Add <a2,v1> to data object
      irods_avu:
        attribute: a2
        value: v1
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: password
        state: add

    - name: Set new <set-a3,set-v1> to data object
      irods_avu:
        attribute: set-a3
        value: set-v1
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: password
        state: set

    - name: Set existing <set-a1,set-v2> to data object
      irods_avu:
        attribute: set-a1
        value: set-v2
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: password
        state: set

    - name: Verify only one AVU with attribute set-a1
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          cnt="$(iquest '%s' \
            "select count(META_DATA_ATTR_VALUE)
            where COLL_NAME = '/testing/home/rods'
              and DATA_NAME = 'add-object'
              and META_DATA_ATTR_NAME = 'set-a1'")"
          [[ "$cnt" == 1 ]]
      changed_when: false

    - name: Set new <set-a4,set-v2,set-u> to data object
      irods_avu:
        attribute: set-a4
        value: set-v2
        units: set-u
        entity_name: /testing/home/rods/set-object
        zone: testing
        password: password
        state: set

    - name: Set existing <set-a2,set-v2,set-u> to data object
      irods_avu:
        attribute: set-a2
        value: set-v2
        units: set-u
        entity_name: /testing/home/rods/set-object
        zone: testing
        password: password
        state: set

    - name: Verify only one AVU with attribute set-a2
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          units="$(iquest '%s' \
            "select META_DATA_ATTR_UNITS
            where COLL_NAME = '/testing/home/rods'
              and DATA_NAME = 'set-object'
              and META_DATA_ATTR_NAME = 'set-a2'
              and META_DATA_ATTR_VALUE = 'set-v2'")"
          [[ "$units" == 'set-u' ]]
      changed_when: false

    - name: Remove <rm-a1,rm-v1> from resource
      irods_avu:
        attribute: rm-a1
        value: rm-v1
        entity_type: resource
        entity_name: ingestRes
        zone: testing
        password: password
        state: absent

    - name: Remove <rm-a,rm-v1,rm-u> from resource
      irods_avu:
        attribute: rm-a1
        value: rm-v1
        units: rm-u
        entity_type: resource
        entity_name: ingestRes
        zone: testing
        password: password
        state: absent

    - name: Remove <rm-a1,rm-v2> from resource
      irods_avu:
        attribute: rm-a1
        value: rm-v2
        entity_type: resource
        entity_name: ingestRes
        zone: testing
        password: password
        state: absent

    - name: Remove <rm-a1,rm-v2> from resource
      irods_avu:
        attribute: rm-a1
        value: rm-v2
        entity_type: resource
        entity_name: ingestRes
        zone: testing
        password: password
        state: absent

    - name: Remove <rm-a2,rm-v1> from resource
      irods_avu:
        attribute: rm-a2
        value: rm-v1
        entity_type: resource
        entity_name: ingestRes
        zone: testing
        password: password
        state: absent

    - name: Verify empty host fails
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        host: null
        zone: testing
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('host')

    - name: Verify wrong host fails
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        host: buz
        zone: testing
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('Could not connect')

    - name: Verify empty port fails
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        port: null
        zone: testing
        username: rods
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('port')

    - name: Verify wrong port fails
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        port: 124
        zone: testing
        username: rods
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('Could not connect')

    - name: Verify unknown zone fails
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        zone: unknown
        username: rods
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('cannot be authenticated')

    - name: Verify incorrect user fails
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        zone: testing
        username: unknown
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('cannot be authenticated')

    - name: Verify normal user is denied
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        zone: testing
        username: tester
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('rodsadmin')

    - name: Verify incorrect password fails
      irods_avu:
        attribute: a1
        value: v1
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: ods
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('cannot be authenticated')

    - name: Verify adding <'',v1> to data object fails
      irods_avu:
        attribute: ''
        value: v1
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('attribute')

    - name: Verify adding <a1,''> to data object fails
      irods_avu:
        attribute: a1
        value: ''
        entity_name: /testing/home/rods/add-object
        zone: testing
        password: password
        state: add
      register: result
      failed_when: not result.failed or result.msg is not search('value')
