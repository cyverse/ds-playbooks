---
- name: Test irods_collection module
  hosts: localhost
  vars:
    password: password
    base_coll: /testing/home/rods
    create_coll: "{{ base_coll }}/test_coll1"
    rm_coll: "{{ base_coll }}/rm_coll"
    child_coll1: "{{ base_coll }}/sub1/sub_coll"
    child_coll2: "{{ base_coll }}/sub2/sub_coll"
  pre_tasks:
    - name: Initialize iRODS session
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: iinit <<< '{{ password }}'
      changed_when: true
      tags: non_idempotent

    - name: Create coll to delete
      ansible.builtin.shell:
        executable:  /bin/bash
        cmd: imkdir '{{ rm_coll }}'
      changed_when: true
      tags: non_idempotent

  tasks:
    - name: Create a collection
      irods_collection:
        path: "{{ create_coll }}"
        state: present
        host: "{{ groups['irods_catalog'][0] }}"
        port: 1247
        admin_user: rods
        admin_password: "{{ password }}"
        zone: testing

    - name: Check if collection exist
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: ils '{{ create_coll }}'
      changed_when: false

    - name: Remove a collection
      irods_collection:
        path: "{{ rm_coll }}"
        state: absent
        host: "{{ groups['irods_catalog'][0] }}"
        port: 1247
        admin_user: rods
        admin_password: "{{ password }}"
        zone: testing

    - name: Check if collection exist
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: "! ils '{{ rm_coll }}'"
      changed_when: false

    - name: Create a collection, without creating parents
      irods_collection:
        path: "{{ child_coll1 }}"
        parents: false
        state: present
        host: "{{ groups['irods_catalog'][0] }}"
        port: 1247
        admin_user: rods
        admin_password: "{{ password }}"
        zone: testing
      register: response
      failed_when: response is succeeded

    - name: Check that collection does not exist
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: "! ils '{{ child_coll1 }}'"
      changed_when: false

    - name: Create a collection, create parents collection as well
      irods_collection:
        path: "{{ child_coll2 }}"
        parents: true
        state: present
        host: "{{ groups['irods_catalog'][0] }}"
        port: 1247
        admin_user: rods
        admin_password: "{{ password }}"
        zone: testing
      register: response

    - name: Check if collection exist
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: ils '{{ child_coll2 }}'
      changed_when: false
