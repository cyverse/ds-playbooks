---
- name: Test irods_user module
  hosts: irods_catalog
  run_once: true
  become: true
  become_user: irods
  vars:
    admin_password: password
    existing_user: existing
    former_user: former
  pre_tasks:
    - name: Create test users
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: iadmin mkuser '{{ item }}' rodsuser
      changed_when: true
      with_items:
        - "{{ existing_user }}"
        - "{{ former_user }}"
      tags: non_idempotent

  tasks:
    - name: Create user
      become: false
      delegate_to: localhost
      irods_user:
        name: test_user1
        type: rodsuser
        info: foo_bar
        state: present
        password: rods123
        admin_password: "{{ admin_password }}"
        zone: testing
        host: "dstesting-provider_configured-1.dstesting_default"
        port: 1247

    - name: Check user exists and is correct type
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o errexit -o pipefail
          iadmin lu test_user1 | grep --quiet "user_type_name: rodsuser"
          iadmin lu test_user1 | grep --quiet "zone_name: testing"
          iadmin lu test_user1 | grep --quiet "user_info: foo_bar"
      changed_when: false

    - name: Verify user has correct password
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: iinit rods123
      environment:
        IRODS_USER_NAME: test_user1
        IRODS_AUTHENTICATION_FILE: /tmp/.a-test_user1
      changed_when: false

    - name: Update password
      irods_user:
        name: "{{ existing_user }}"
        state: present
        password: rods321
        admin_user: rods
        admin_password: "{{ admin_password }}"
        zone: testing

    - name: Check user has new password
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: iinit rods321
      environment:
        IRODS_USER_NAME: "{{ existing_user }}"
        IRODS_AUTHENTICATION_FILE: /tmp/.a-existing_user
      changed_when: false

    - name: Update type
      irods_user:
        name: "{{ existing_user }}"
        type: rodsadmin
        state: present
        admin_user: rods
        admin_password: "{{ admin_password }}"
        zone: testing

    - name: Check user has new type
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          iadmin lu '{{ existing_user }}' | grep "user_type_name: rodsadmin"
      changed_when: false

    - name: Update user's info
      irods_user:
        name: "{{ existing_user }}"
        info: bar_foo
        state: present
        admin_user: rods
        admin_password: "{{ admin_password }}"
        zone: testing

    - name: Check user exist and has correct info via iadmin
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          iadmin lu '{{ existing_user }}' | grep "user_info: bar_foo"
      changed_when: false

    - name: Remove user
      irods_user:
        name: '{{ former_user }}'
        state: absent
        admin_user: rods
        admin_password: "{{ admin_password }}"
        zone: testing

    - name: Check if user removed
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          iadmin lu '{{ former_user }}' | grep "No rows found"
      changed_when: false
