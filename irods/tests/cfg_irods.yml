---
- import_playbook: rule_templates.yml


- name: test common file deposition
  hosts: irods
  become: true
  become_user: irods
  tasks:
    - name: check common configuration files in place
      stat:
        path: /etc/irods/{{ item }}
      register: response
      failed_when: >-
        not response.stat.exists
        or response.stat.pw_name != 'irods'
        or not response.stat.rusr
      with_items:
        - avra.re
        - avra-env.re
        - bisque.re
        - bisque-env.re
        - calliope.re
        - captcn.re
        - captcn-env.re
        - coge.re
        - core.dvm
        - core.fnm
        - core.re
        - de.re
        - host_access_control_config.json
        - hosts_config.json
        - ipc-custom.re
        - ipc-env.re
        - ipc-housekeeping.re
        - ipc-json.re
        - ipc-logic.re
        - ipc-trash.re
        - mdrepo.re
        - mdrepo-env.re
        - pire.re
        - pire-env.re
        - sernec.re
        - sernec-env.re
        - server_config.json
        - service_account.config
        - terraref.re
        - terraref-env.re

    - name: test ensure ipc-amqp.re is gone
      stat:
        path: /etc/irods/ipc-amqp.re
      register: response
      failed_when: response.stat.exists

    - name: test ensure ipc-uuid.re is gone
      stat:
        path: /etc/irods/ipc-uuid.re
      register: response
      failed_when: response.stat.exists

    - name: test ensure rm-trash is gone
      stat:
        path: /var/lib/irods/msiExecCmd_bin/rm-trash
      register: response
      failed_when: response.stat.exists

    - name: Verify irods_environment.json is in place
      stat:
        path: /var/lib/irods/.irods/irods_environment.json
      register: response
      failed_when: not response.stat.exists

    - name: Verify common command scripts are in place
      stat:
        path: /var/lib/irods/msiExecCmd_bin/{{ item }}
      register: response
      failed_when: >-
        not response.stat.exists
        or response.stat.pw_name != 'irods'
        or not response.stat.xusr
      with_items:
        - amqptopicsend.py
        - calliope-ingest
        - correct-size
        - de-archive-data
        - de-create-collection
        - delete-scheduled-rule
        - generateuuid
        - set-uuid
        - imeta-exec

    - name: Verify database_config.json does not exist
      stat:
        path: /etc/irods/database_config.json
      register: response
      failed_when: response.stat.exists

    - name: Verify .pgpass does not exist
      stat:
        path: /var/lib/irods/.pgpass
      register: response
      failed_when: response.stat.exists

    - name: retrieve encoded irods_environment.json
      slurp:
        src: /var/lib/irods/.irods/irods_environment.json
      register: ieEncoded

    - name: decode irods_environment.json
      set_fact:
        irods_environment: "{{ ieEncoded.content | b64decode }}"

    - name: verify irods_environment.json has correct contents
      assert:
        that:
          - irods_environment.irods_host == inventory_hostname
          - irods_environment.irods_port == 1247
          - >-
            irods_environment.irods_user_name
            == (
              'rs7_admin' if
                inventory_hostname == 'dstesting-consumer_unconfigured-1.dstesting_default' else
              'rods' )
          - irods_environment.irods_zone_name == 'testing'
          - irods_environment.irods_client_server_policy == 'CS_NEG_REFUSE'
          - irods_environment.irods_server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - irods_environment.irods_server_control_plane_port == 1248
          - irods_environment.irods_default_hash_scheme == 'MD5'
          - irods_environment.irods_default_resource == 'ingestRes'

    - when: inventory_hostname in groups['irods_catalog']
      block:
        - name: retrieve encoded server_config.json
          slurp:
            src: /etc/irods/server_config.json
          register: scEncoded

        - name: decode server_config.json
          set_fact:
            server_config: "{{ scEncoded.content | b64decode }}"

        - name: verify server_config.json has correct contents
          assert:
            that:
              - server_config.advanced_settings.default_number_of_transfer_threads == 4
              - >-
                server_config.advanced_settings.maximum_number_of_concurrent_rule_engine_server_processes
                == 4
              - >-
                server_config.advanced_settings.transfer_buffer_size_for_parallel_transfer_in_megabytes
                == 4
              - server_config.catalog_provider_hosts | length == 1
              - server_config.catalog_provider_hosts[0] == inventory_hostname
              - server_config.catalog_service_role == 'provider'
              - server_config.default_dir_mode == '0750'
              - server_config.default_file_mode == '0600'
              - server_config.default_hash_scheme == 'MD5'
              - server_config.default_resource_directory is not defined
              - server_config.default_resource_name == 'ingestRes'
              - server_config.environment_variables.IRODS_DATABASE_USER_PASSWORD_SALT == 'salt'
              - >-
                server_config.environment_variables.IRODS_AMQP_URI
                == "amqp://amqp_admin:password@dstesting-amqp-1.dstesting_default:5672/%2F"
              - server_config.federation | length == 2
              - server_config.federation[0].catalog_provider_hosts | length == 2
              - server_config.federation[0].catalog_provider_hosts[0] == '128.196.65.155'
              - server_config.federation[0].negotiation_key == 'FAKE___32_byte_negotiation_key_1'
              - server_config.federation[0].zone_key == 'FAKE_zone_key_1'
              - server_config.federation[0].zone_name == 'cyverse.dev'
              - server_config.negotiation_key == 'TEMPORARY_32byte_negotiation_key'
              - >-
                server_config.plugin_configuration.database.postgres.db_host
                == 'dstesting-dbms_configured-1.dstesting_default'
              - server_config.plugin_configuration.database.postgres.db_password == 'testpassword'
              - server_config.plugin_configuration.database.postgres.db_port == 5432
              - server_config.plugin_configuration.database.postgres.db_username == 'irods'
              - >-
                server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set
                  | length
                == 3
              - >-
                server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set[0]
                == 'ipc-custom'
              - >-
                server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set[1]
                == 'ipc-housekeeping'
              - >-
                server_config.schema_validation_base_uri
                == 'file:///var/lib/irods/configuration_schemas'
              - server_config.server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
              - server_config.server_control_plane_port == 1248
              - server_config.server_port_range_end == 19999
              - server_config.server_port_range_start == 19990
              - server_config.zone_key == 'TEMPORARY_zone_key'
              - server_config.zone_name == 'testing'
              - server_config.zone_port == 1247
              - server_config.zone_user == 'rods'

    - when: inventory_hostname in groups['irods_resource']
      block:
        - name: retrieve encoded server_config.json
          slurp:
            src: /etc/irods/server_config.json
          register: scEncoded

        - name: decode server_config.json
          set_fact:
            server_config: "{{ scEncoded.content | b64decode }}"

        - name: verify server_config.json has correct contents
          assert:
            that:
              - server_config.advanced_settings.default_number_of_transfer_threads == 4
              - >-
                server_config.advanced_settings.maximum_number_of_concurrent_rule_engine_server_processes
                == 4
              - >-
                server_config.advanced_settings.transfer_buffer_size_for_parallel_transfer_in_megabytes
                == 4
              - server_config.catalog_provider_hosts == groups['irods_catalog']
              - server_config.catalog_service_role == 'consumer'
              - server_config.default_hash_scheme == 'MD5'
              - server_config.default_resource_directory == '/var/lib/irods/Vault'
              - server_config.default_resource_name == 'ingestRes'
              - server_config.environment_variables == {}
              - server_config.federation | length == 2
              - server_config.negotiation_key == 'TEMPORARY_32byte_negotiation_key'
              - server_config.plugin_configuration.database is not defined
              - >-
                server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set
                  | length
                == 3
              - >-
                server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set[0]
                == 'ipc-custom'
              - >-
                server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set[1]
                == 'ipc-housekeeping'
              - >-
                server_config.schema_validation_base_uri
                == 'file:///var/lib/irods/configuration_schemas'
              - server_config.server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
              - server_config.server_control_plane_port == 1248
              - server_config.server_port_range_end == 20009
              - server_config.server_port_range_start == 20000
              - server_config.zone_key == 'TEMPORARY_zone_key'
              - server_config.zone_name == 'testing'
              - server_config.zone_port == 1247
              - >-
                server_config.zone_user
                == (
                  'rs7_admin' if
                    inventory_hostname == 'dstesting-consumer_unconfigured-1.dstesting_default' else
                  'rods' )

        - name: verify consumer_configured_ubuntu_1 specific server_config.json
          when: inventory_hostname == 'dstesting-consumer_configured_ubuntu-1.dstesting_default'
          assert:
            that:
              - server_config.default_dir_mode == '0770'
              - server_config.default_file_mode == '0660'

    - when: inventory_hostname == 'dstesting-consumer_configured_ubuntu-1.dstesting_default'
      block:
        - name: retrieve encoded hosts_config.json
          slurp:
            src: /etc/irods/hosts_config.json
          register: hcEncoded

        - name: decode hosts_config.json
          set_fact:
            hosts_config: "{{ hcEncoded.content | b64decode }}"

        - name: verify hosts_config.json contents
          assert:
            that:
              - hosts_config.host_entries[0].address_type == 'local'
              - >-
                hosts_config.host_entries[0].addresses[0].address
                == 'dstesting-consumer_configured_ubuntu-1.dstesting_default'
              - hosts_config.host_entries[0].addresses[1].address == 'alias-1'
              - hosts_config.host_entries[0].addresses[2].address == 'alias-2'
