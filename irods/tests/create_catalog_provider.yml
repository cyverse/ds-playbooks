---
- name: Test allow catalog service providers to talk to DBMS
  hosts: dbms
  become: true
  tasks:
    - name: Test allow communication with Postgres DBMS
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          sed --quiet \
              '/^# BEGIN DS IRODS MANAGED BLOCK$/{
                n;
                / *host \+ICAT \+irods \+[0-9.]\+\/32 \+md5$/!Q1;
                n;
                / *host \+ICAT \+irods \+[0-9.]\+\/32 \+md5$/!Q1;
                n;
                /^# END DS IRODS MANAGED BLOCK$/Q0 };
              $ Q1' \
            /etc/postgresql/12/main/pg_hba.conf
      changed_when: false
      tags: skip_ansible_lint


- name: Test provisioning
  ansible.builtin.import_playbook: provision.yml


- name: Test install catalog service provider packages
  hosts: irods_catalog
  become: true
  become_flags: '-i'
  tasks:
    - name: Verify correct packages installed
      ansible.builtin.include_tasks: tasks/test_pkg_installed.yml
      with_items:
        - mailx
        - parallel
        - pgdg-redhat-repo
        - postgresql12
        - postgresql12-odbc
      loop_control:
        loop_var: pkg

    - name: Test install PostgreSQL 12 ODBC Driver
      ansible.builtin.command: odbcinst -q -d -n PostgreSQL
      changed_when: false

    - name: Test ensure pika installed
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          pip --disable-pip-version-check show pika | sed --quiet 's/^Version: //p' 2> /dev/null
      register: resp
      changed_when: false
      failed_when: resp.stdout is version('1.2', '>=')

    - name: Test lock irods-database-plugin-postgres to required version
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          if ! yum versionlock status | grep --quiet irods-database-plugin-postgres; then
            printf 'irods-database-plugin-postgres not locked\n' >&2
            exit 1
          elif info="$(yum --quiet list installed irods-database-plugin-postgres | tail --lines=+2)"
          then
            readarray -t versions <<< "$info"
            for version in "${versions[@]}"; do
              read _ verNum _ <<< "$version"
              if ! [[ "$verNum" =~ 4\.2\.8 ]]; then
                printf 'found version %s\n' "$verNum" >&2
                exit 1
              fi
            done
          fi
      changed_when: false

    - name: Verify PostgreSQL plugin installed
      ansible.builtin.include_tasks: tasks/test_pkg_installed.yml
      vars:
        pkg: irods-database-plugin-postgres
        version: 4.2.8

    - name: Verify other plugins installed
      ansible.builtin.import_tasks: tasks/test_install_plugins.yml

    - name: Verify iRODS ownership
      ansible.builtin.include_tasks: tasks/test_irods_ownership.yml
      with_items:
        - /etc/irods
        - /var/lib/irods
      loop_control:
        loop_var: dir

    - name: Test correct psql version
      ansible.builtin.assert:
        that: ansible_env.PATH is search('/usr/pgsql-12/bin' | regex_escape)


- name: Test iRODS configuration
  import_playbook: cfg_irods.yml


- name: Test initialize ICAT schema
  hosts: dbms_primary
  become: true
  become_user: postgres
  tasks:
    - name: Verify ICAT schema version
      community.postgresql.postgresql_query:
        db: ICAT
        query: >
          SELECT option_value
          FROM r_grid_configuration
          WHERE namespace = 'database' AND option_name = 'schema_version'
      register: response
      failed_when: response.failed or response.query_result[0]['option_value'] != '7'


- name: Test start iRODS on catalog service providers
  hosts: irods_catalog
  become: true
  become_user: irods
  gather_facts: false
  tasks:
    - name: Test iRODS running
      ansible.builtin.import_tasks: tasks/test_irods_running.yml

    - name: Verify that clerver auth file exists
      ansible.builtin.stat:
        path: /var/lib/irods/.irods/.irodsA
      register: response
      failed_when: not response.stat.exists or response.stat.pw_name != 'irods'


- name: Test iRODS run-time initialization
  ansible.builtin.import_playbook: irods_runtime_init.yml
