---
- name: Test the default variables populate the configs correctly
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    avra_env: "{{ lookup('template', '../templates/rule-bases/avra-env.re.j2') }}"
    cyverse_env: "{{ lookup('template', '../templates/rule-bases/cyverse-env.re.j2') }}"
    pire_env: "{{ lookup('template', '../templates/rule-bases/pire-env.re.j2') }}"
  tasks:
    - name: Verify constants expand correctly in cyverse-env.re.j2
      ansible.builtin.assert:
        that:
          - cyverse_env is search("cyverse_AMQP_EXCHANGE = 'irods'")
          - cyverse_env is search("cyverse_DEFAULT_REPL_RESC = 'demoResc'")
          - cyverse_env is search("cyverse_DEFAULT_RESC = 'demoResc'")
          - cyverse_env is search("cyverse_EMAIL_FROM_ADDR = 'irods@localhost'")
          - cyverse_env is search("cyverse_EMAIL_REPORT_ADDR = 'root@localhost'")
          - cyverse_env is search("cyverse_INIT_REPL_DELAY = 0")
          - cyverse_env is search("cyverse_MAX_NUM_RE_PROCS = 4")
          - cyverse_env is search("cyverse_ZONE = 'testing'")
          - >-
            cyverse_env
              is search("cyverse_RE_HOST = 'dstesting-provider_configured-1.dstesting_default'")

    - name: Verify constants expand correctly in avra-env.re.j2
      ansible.builtin.assert:
        that:
          - avra_env is search("avra_RESC = 'demoResc'")

    - name: Verify constants expand correctly in pire-env.re.j2
      ansible.builtin.assert:
        that: pire_env is search("pire_RESC = 'demoResc'")


- name: Test non resource custom values set correctly in cyverse-env.re
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    irods_amqp_exchange: exchange
    irods_canonical_hostname: local
    irods_init_repl_delay: 1
    irods_max_num_re_procs: 1
    irods_re_host: other
    irods_report_email_addr: bob@reports
    irods_service_account_name: balloon
    irods_zone_name: zoner
    cyverse_env: "{{ lookup('template', '../templates/rule-bases/cyverse-env.re.j2') }}"
  tasks:
    - name: Verify custom values
      ansible.builtin.assert:
        that:
          - cyverse_env is search("cyverse_AMQP_EXCHANGE = 'exchange'")
          - cyverse_env is search("cyverse_EMAIL_FROM_ADDR = 'balloon@localhost'")
          - cyverse_env is search("cyverse_EMAIL_REPORT_ADDR = 'bob@reports'")
          - cyverse_env is search("cyverse_INIT_REPL_DELAY = 1")
          - cyverse_env is search("cyverse_MAX_NUM_RE_PROCS = 1")
          - cyverse_env is search("cyverse_RE_HOST = 'other'")
          - cyverse_env is search("cyverse_ZONE = 'zoner'")


- name: Test that custom default resc set correctly in cyverse-env.re
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    irods_default_resource: custom
    cyverse_env: "{{ lookup('template', '../templates/rule-bases/cyverse-env.re.j2') }}"
  tasks:
    - name: Verify resource constants
      ansible.builtin.assert:
        that:
          - cyverse_env is search("cyverse_DEFAULT_REPL_RESC = 'custom'")
          - cyverse_env is search("cyverse_DEFAULT_RESC = 'custom'")


- name: Test that custom default replication resc set correctly in cyverse-env.re
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    irods_default_repl_resource: custom
    cyverse_env: "{{ lookup('template', '../templates/rule-bases/cyverse-env.re.j2') }}"
  tasks:
    - name: Verify resource constants
      ansible.builtin.assert:
        that:
          - cyverse_env is search("cyverse_DEFAULT_REPL_RESC = 'custom'")
          - cyverse_env is search("cyverse_DEFAULT_RESC = 'demoResc'")


- name: Test Avra params are set correctly
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    avra_base_collection: base
    avra_resource_hierarchy:
      name: avraRes
    avra_env: "{{ lookup('template', '../templates/rule-bases/avra-env.re.j2') }}"
  tasks:
    - name: Verify params
      ansible.builtin.assert:
        that:
          - avra_env is search("avra_RESC = 'avraRes'")


- name: Test PIRE params are set correctly
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    pire_resource_hierarchy:
      name: pireRes
    pire_env: "{{ lookup('template', '../templates/rule-bases/pire-env.re.j2') }}"
  tasks:
    - name: Verify params
      ansible.builtin.assert:
        that: pire_env is search("pire_RESC = 'pireRes'")
