---
- name: Test run-time initialization
  hosts: irods_catalog
  become: true
  become_user: irods
  run_once: true
  tasks:
    - name: Test ensure service user type exists
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          resp = "$(iquest \
            "select TOKEN_ID
              where TOKEN_NAMESPACE = 'user_type'
                and TOKEN_NAME = 'ds-service'
                and TOKEN_VALUE2 = 'a Data Store service'" )"
          ! [[ "$resp" =~ ^CAT_NO_ROWS_FOUND ]]
      changed_when: false

    - name: Verify /zone/home/public doesn't exist
      ansible.builtin.command: ils /testing/home/public
      register: response
      changed_when: false
      failed_when: response is succeeded

    - name: Verify /zone/home/shared does exist
      ansible.builtin.command: ils /testing/home/shared
      changed_when: false

    - name: Verify /zone/trash/home/public doesn't exist
      ansible.builtin.command: ils /testing/trash/home/public
      register: response
      changed_when: false
      failed_when: response is succeeded

    - name: Verify /zone/trash/home/shared does exist
      ansible.builtin.command: ils /testing/trash/home/shared
      changed_when: false

    - name: Test ensure CyVerse curated collection base collection exists
      ansible.builtin.command: ils /testing/home/shared/commons_repo/curated
      changed_when: false

    - name: Verify that rodsadmin has write permission on /
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          ils -A / | grep --quiet 'g:rodsadmin#testing:modify object'
      changed_when: false

    - name: Verify that rodsadmin has write permission on the zone collection
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          ils -A /testing | grep --quiet 'g:rodsadmin#testing:modify object'
      changed_when: false

    - name: Verify that rodsadmin has write permission on static collections
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          groupId="$(iquest '%s' "select USER_GROUP_ID where USER_GROUP_NAME = 'rodsadmin'")"
          iquest '%s' \
            "select COLL_ACCESS_NAME
              where COLL_NAME = '{{ item }}' and COLL_ACCESS_USER_ID = '$groupId'"
      register: result
      failed_when:
        result.stdout != 'modify object'
      changed_when: false
      with_items:
        - /
        - /testing
        - /testing/home
        - /testing/trash
        - /testing/trash/home

    - name: Verify that rodsadmin has own permission on all other collections
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          groupId="$(iquest '%s' "select USER_GROUP_ID where USER_GROUP_NAME = 'rodsadmin'")"
          totColls="$(iquest '%s' "select count(COLL_ID) where COLL_NAME like '{{ item }}/%'")"
          totCollsOwn="$(iquest '%s' \
            "select count(COLL_ID)
              where COLL_NAME like '{{ item }}/%'
                and COLL_ACCESS_USER_ID = '$groupId' and COLL_ACCESS_NAME = 'own'" )"
          (( totColls > 0 && totColls == totCollsOwn ))
      changed_when: false
      with_items:
        - /testing/home
        - /testing/trash/home

    - name: Verify that rodsadmin has own permission on all data objects
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          groupId="$(iquest '%s' "select USER_GROUP_ID where USER_GROUP_NAME = 'rodsadmin'")"
          totObjs="$(iquest '%s' "select count(DATA_ID)")"
          totObjsOwn="$(iquest '%s' \
            "select count(DATA_ID)
              where DATA_ACCESS_USER_ID = '$groupId' and DATA_ACCESS_NAME = 'own'" )"
          (( totObjs == totObjsOwn ))
      changed_when: false

    - name: Test ensure anonymous user exists
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: test "$(iadmin lu anonymous)" != 'No rows found'
      changed_when: false

    - name: Verify anonymous user has read access to zone collection
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          ils -A /testing | grep --quiet 'anonymous#testing:read object'
      changed_when: false

    - name: Verify anonymous user has read access to home collection
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          ils -A /testing/home | grep --quiet 'anonymous#testing:read object'
      changed_when: false

    - name: Verify anonymous user has read access to public collection
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          ils -A /testing/home/shared | grep --quiet 'anonymous#testing:read object'
      changed_when: false

    - name: Verify anonymous user has read access to CyVerse curated collection
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          ils -A /testing/home/shared/commons_repo/curated \
            | grep --quiet 'anonymous#testing:read object'
      changed_when: false

    - name: Test start quota usage computation
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -o pipefail
          iqstat -a | grep --quiet {{ item }}
      with_items:
        - cyverse_housekeeping_updateQuotaUsage
        - cyverse_housekeeping_determineAllStorageFreeSpace
        - cyverse_housekeeping_rmTrash
      changed_when: false
