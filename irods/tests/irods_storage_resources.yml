---
- name: Test create storage resources
  hosts: irods_resource
  become: true
  become_user: irods
  strategy: linear
  vars:
    expected_resources: "{{
      groups['irods_resource']
        | map('extract', hostvars, 'irods_storage_resources')
        | flatten
        | map(attribute='name')
        | union(['bundleResc']) }}"
  tasks:
    - name: Test create vault directory
      ansible.builtin.stat:
        path: "{{ item.vault }}"
      register: response
      failed_when: >-
        not response.stat.exists
        or not response.stat.isdir
        or response.stat.pw_name != 'irods'
        or not response.stat.rusr
        or not response.stat.wusr
        or not response.stat.xusr
      with_items: "{{ irods_storage_resources }}"

    - name: Determine installed pip packages
      community.general.pip_package_info:
        clients: pip3
      register: pip_info

    - name: Verify python modules for irods_unixfilesystem_resource installed
      when:
        - "'python-irodsclient' not in pip_info.packages['pip3']"
        - pip_info.packages['pip3']['python-irodsclient'].version is version_compare('2.0.0', '<')
      ansible.builtin.fail:

    - name: Test define storage resource  # noqa: run-once[task]
      run_once: true
      ansible.builtin.command:
        cmd: iquest '%s' "select RESC_NAME where RESC_TYPE_NAME = 'unixfilesystem'"
      register: response
      changed_when: false
      failed_when: >-
        response.stdout_lines | symmetric_difference(expected_resources) | list | length > 0

    - name: Verify context is correct
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          if ! context="$(iquest '%s' "select RESC_CONTEXT where RESC_NAME = '{{ item.name }}'")"
          then
            exit 1
          fi
          test "$context" = '{{ item.context }}'
      changed_when: false
      with_items: "{{ irods_storage_resources }}"

    - name: Verify status has been initialized
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          if ! status="$(iquest '%s' "select RESC_STATUS where RESC_NAME = '{{ item.name }}'")"
          then
            exit 1
          fi
          test -n "$status"
      changed_when: false
      with_items: "{{ irods_storage_resources }}"

    - name: Verify free space is initialized
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          if ! \
            freeSpace="$(iquest '%s' "select RESC_FREE_SPACE where RESC_NAME = '{{ item.name }}'")"
          then
            exit 1
          fi
          test -n "$freeSpace"
      changed_when: false
      with_items: "{{ irods_storage_resources }}"
