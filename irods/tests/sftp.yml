---
- name: Test template expansion
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
    - group_vars/sftp_cfg.yml
  vars:
    sftpgo_conf: "{{ lookup('template', '../templates/sftp/etc/sftpgo/sftpgo.conf.j2') }}"
    sftpgo_json: "{{ lookup('template', '../templates/sftp/etc/sftpgo/sftpgo.json.j2') }}"
  tasks:
    - name: Verify sftpgo.conf expands correctly
      ansible.builtin.assert:
        that:
          - sftpgo_conf is search('SFTPGO_DEFAULT_ADMIN_USERNAME=admin')
          - sftpgo_conf is search('SFTPGO_DEFAULT_ADMIN_PASSWORD=sftpgo_pass')
          - sftpgo_conf is search('SFTPGO_HOME_PATH=/sftpgo_vault/data')

    - name: Test sftpgo.json contents
      ansible.builtin.assert:
        that:
          - sftpgo_json.sftpd.bindings[0].port == 2022
          - sftpgo_json.data_provider.users_base_dir == '/sftpgo_vault/data'
          - sftpgo_json.data_provider.backups_path == '/sftpgo_vault/backups'
          - sftpgo_json.httpd.bindings[0].port == 18023
          - sftpgo_json.command.commands[0].env[0] == 'IRODS_PROXY_USER=sftp'
          - sftpgo_json.command.commands[0].env[1] == 'IRODS_PROXY_PASSWORD=sftpgo_irods_pass'
          - >-
            sftpgo_json.command.commands[0].env[2]
            == 'IRODS_HOST=dstesting-provider_configured-1.dstesting_default'
          - sftpgo_json.command.commands[0].env[3] == 'IRODS_PORT=1247'
          - sftpgo_json.command.commands[0].env[4] == 'IRODS_ZONE=testing'
          - sftpgo_json.command.commands[0].env[5] == 'IRODS_SHARED=/testing/home/shared'


- name: Test sftp playbook
  hosts: sftp
  strategy: linear
  tasks:
    - name: Verify sftpgo user information  # noqa: run-once[task]
      delegate_to: localhost
      run_once: true
      block:
        - name: Retrieve sftpgo iRODS user information
          ansible.builtin.shell:
            executable: /bin/bash
            cmd: |
              iinit password
              iadmin lu sftp
          register: user_info
          changed_when: false

        - name: Verify user information
          ansible.builtin.assert:
            that: "user_info.stdout is search('user_type_name: rodsadmin')"

    - name: Test sftpgo installed
      ansible.builtin.stat:
        path: "{{ item }}"
      register: response
      failed_when: not response.stat.exists
      with_items:
        - /etc/sftpgo/sftpgo.conf
        - /etc/sftpgo/sftpgo.json
        - /usr/bin/sftpgo
        - /usr/share/sftpgo

    - name: Test sftpgo-auth-irods installed
      ansible.builtin.stat:
        path: /usr/bin/sftpgo-auth-irods
      register: response
      failed_when: not response.stat.exists

    - name: Test sftpgo.json deployed
      ansible.builtin.stat:
        path: /etc/sftpgo/sftpgo.json
      register: response
      failed_when: not response.stat.exists

    - name: Test sftpgo.conf deployed
      ansible.builtin.stat:
        path: /etc/sftpgo/sftpgo.conf
      register: response
      failed_when: not response.stat.exists

    - name: Test blacklist.json deployed
      ansible.builtin.stat:
        path: /etc/sftpgo/blacklist.json
      register: response
      failed_when: not response.stat.exists

    - name: Test sftpgo system group exists
      ansible.builtin.getent:
        database: group
        key: sftpgo

    - name: Test sftpgo service account exists
      ansible.builtin.getent:
        database: passwd
        key: sftpgo

    - name: Test create vault dir
      ansible.builtin.debug:
        msg: TODO implement

    - name: Test create a vault data, backup dir
      ansible.builtin.debug:
        msg: TODO implement

    - name: Test create a log dir
      ansible.builtin.debug:
        msg: TODO implement

    - name: Test create a work dir
      ansible.builtin.debug:
        msg: TODO implement

    - name: Test create a config dir
      ansible.builtin.debug:
        msg: TODO implement

    - name: Test SSH Host Keys
      ansible.builtin.debug:
        msg: TODO implement

    - name: Test sftpgo.service deployed
      ansible.builtin.stat:
        path: /usr/lib/systemd/system/sftpgo.service
      register: response
      failed_when: not response.stat.exists

    - name: Test update message of the day
      ansible.builtin.debug:
        msg: TODO implement
