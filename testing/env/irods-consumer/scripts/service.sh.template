#!/usr/bin/env bash
#
# Usage:
#  service (start|stop)
#
# This script starts or stops the resource server inside the container if there
# is one.

set -o errexit -o nounset -o pipefail

main()
{
  if [ "$#" -lt 1 ]
  then
    printf 'Requires either "start" or "stop" as its first parameter\n' >&2
    return 1
  fi

  local action="$1"

  case "$action" in
    start)
      start
      ;;
    stop)
      stop
      ;;
    *)
      printf 'Unknown command "%s"\n' "$action" >&2
      return 1
      ;;
  esac
}

start()
{
  # Ensure that the correct user owns everything in /var/lib/irods and /etc/irods
  # If this isn't done, some of the ansible ownership tests will fail.
  if [ -e /var/lib/irods/.irods/irods_environment.json ]
  then
    chown --recursive "$IRODS_SYSTEM_USER":"$IRODS_SYSTEM_GROUP" /etc/irods /var/lib/irods

    until exec 3<> /dev/tcp/"$IRODS_CATALOG_PROVIDER"/"$IRODS_ZONE_PORT"
    do
      printf 'Waiting for catalog service provider\n'
      sleep 1
    done 2> /dev/null

    exec 3<&-
    exec 3>&-

    printf 'Starting iRODS catalog consumer service\n'
    if ! sudo --login --user "$IRODS_SYSTEM_USER" /var/lib/irods/irodsctl --test start
    then
      printf 'Failed to start service\n'
      cat /var/lib/irods/log/control_log.txt
      return 1
    fi

    touch /var/lock/subsys/irods
  fi
}

stop()
{
  if sudo --login --user  "$IRODS_SYSTEM_USER"  imiscsvrinfo >& /dev/null
  then
    sudo  --login --user  "$IRODS_SYSTEM_USER" /var/lib/irods/irodsctl stop
    rm --force /var/lock/subsys/irods
  fi
}

main "$@"
